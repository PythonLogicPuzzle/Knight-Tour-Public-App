"use strict";(self["webpackChunkthe_knights_tour"]=self["webpackChunkthe_knights_tour"]||[]).push([[752],{752:function(t,a,e){e.r(a),e.d(a,{default:function(){return o}});var s=function(){var t=this,a=t.$createElement;t._self._c;return t._m(0)},i=[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"container my-5"},[e("h1",{staticClass:"code-line",attrs:{"data-line-start":"0","data-line-end":"1"}},[e("a",{attrs:{id:"The_Knights_Tour_Problem_0"}}),t._v("The Knight’s Tour Problem")]),e("p",{staticClass:"has-line-data",attrs:{"data-line-start":"1","data-line-end":"2"}},[t._v("According to Wikipedia")]),e("blockquote",[e("p",{staticClass:"has-line-data",attrs:{"data-line-start":"2","data-line-end":"3"}},[t._v(" A "),e("strong",[t._v("knight’s tour")]),t._v(" is a sequence of moves of a knight on a chessboard such that the knight visits every square exactly once. If the knight ends on a square that is one knight’s move from the beginning square (so that it could tour the board again immediately, following the same path), the tour is closed; otherwise, it is open ")])]),e("p",{staticClass:"has-line-data",attrs:{"data-line-start":"4","data-line-end":"5"}},[t._v("According to me")]),e("blockquote",[e("p",{staticClass:"has-line-data",attrs:{"data-line-start":"5","data-line-end":"6"}},[t._v("It’s one of those problems that bring you hair-pulling disorder if you tried to solve it on your own instead of assigning computers to solve it")])]),e("h1",{staticClass:"code-line",attrs:{"data-line-start":"7","data-line-end":"8"}},[e("a",{attrs:{id:"Warnsdorffs_Rule_7"}}),t._v("Warnsdorff’s Rule")]),e("p",{staticClass:"has-line-data",attrs:{"data-line-start":"8","data-line-end":"9"}},[t._v("Is a simple heuristic technique for solving the Knights Tour problem. And its the used technique in this visualization.")]),e("p",{staticClass:"has-line-data",attrs:{"data-line-start":"10","data-line-end":"11"}},[t._v("It consists of two steps:")]),e("ol",[e("li",{staticClass:"has-line-data",attrs:{"data-line-start":"11","data-line-end":"12"}},[t._v("Find the list of unvisited legal knight moves from the surrounding squares.")]),e("li",{staticClass:"has-line-data",attrs:{"data-line-start":"12","data-line-end":"14"}},[t._v("Choose the one with the lowest accessibility.")])]),e("dl",[e("dt",[t._v("Accessibility")]),e("dd",[t._v("The accessibility of square x is the number of squares accessible from x.")])]),e("h1",{staticClass:"code-line",attrs:{"data-line-start":"17","data-line-end":"18"}},[e("a",{attrs:{id:"The_Fun_Facts_17"}}),t._v("The Fun Facts")]),e("ul",[e("li",{staticClass:"has-line-data",attrs:{"data-line-start":"18","data-line-end":"19"}},[t._v("On an 8 x 8 board, it has been proven that there are 26,534,728,821,064 closed-path tours!")]),e("li",{staticClass:"has-line-data",attrs:{"data-line-start":"19","data-line-end":"20"}},[t._v("The number of open path tours is unknown until this day of age!")]),e("li",{staticClass:"has-line-data",attrs:{"data-line-start":"20","data-line-end":"21"}},[t._v(" And above all, despite all these absurd numbers of tours, non can produce a "),e("a",{attrs:{href:"%5Bhttps://en.wikipedia.org/wiki/Magic_square%5D(https://en.wikipedia.org/wiki/Magic_square)"}},[t._v("magic square")]),t._v(", only "),e("a",{attrs:{href:"%5Bhttps://en.wikipedia.org/wiki/Magic_square#Additive-multiplicative_magic_and_semimagic_squares%5D(https://en.wikipedia.org/wiki/Magic_square#Additive-multiplicative_magic_and_semimagic_squares)"}},[t._v("semi-magic squares")]),t._v("! ")])])])}],n={name:"About"},r=n,l=e(1001),d=(0,l.Z)(r,s,i,!1,null,"35ab232f",null),o=d.exports}}]);
//# sourceMappingURL=752.5e595bf7.js.map